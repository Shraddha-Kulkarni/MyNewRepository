

import java.util.Scanner;
import java.util.function.Function;

public class InsertSpace {

	private static void formatString(String str) {
		Function<String,String> f= (s)->
		{StringBuilder result = new StringBuilder();
		for (int i = 0; i < str.length(); i++) {
		   if (i > 0) {
		      result.append(" ");
		    }

		   result.append(str.charAt(i));
		}

		return result.toString();
		};
		String res=f.apply(str);
		System.out.println(res);
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the String");
		String str=sc.next();
		formatString(str);
		sc.close();
	}
}
OUTPUT:
Enter the String
Sreeja
S r e e j a
---------------------------------------------------------------------------------------------------
import java.util.Scanner;
import java.util.function.BiPredicate;

public class LambdaAuthentication {
	public static void check(String user,String pwd)
	{
		BiPredicate<String,String> bp= (u,p)->{
			if(user.equals("Sreeja") && pwd.equals("2026"))
				return true;
			else
			return false;
				};
				System.out.println(bp.test(user, pwd));
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter user name");
		String uname=sc.next();
		System.out.println("Enter password");
		String pwd=sc.next();
		check(uname,pwd);
	}

}
OUTPUT:
Enter user name
Sreeja
Enter password
2026
true
------------------------------------------------------------------------------------------------------
import java.util.Scanner;
import java.util.function.Function;

public class LambdaFactorial {
	public static int factorial(int n)
	{
		int res=1;
		for(int i=1;i<=n;i++)
		{
			 res=res*i;
		}
		return res;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter num for factorial");
		int n=sc.nextInt();
		Function<Integer,Integer> fact= LambdaFactorial::factorial;
		System.out.println("factorial = "+fact.apply(n));
		
		sc.close();
	}

}
OUTPUT:
Enter num for factorial
4
factorial = 24
---------------------------------------------------------------------------------------------------
public interface PowerFunc {
	 public double powerVal(double x,double y);
	}
import java.util.Scanner;
import java.util.function.BiFunction;

public class LambdaPowerDemo {
	public static void main(String args[])
	{
		PowerFunc pf= (x,y) -> Math.pow(x,y);
		Scanner sc=new Scanner(System.in);
		double x,y;
		System.out.println("Enter x value");
		x=sc.nextDouble();
		System.out.println("Enter y value");
		y=sc.nextDouble();
		double res=pf.powerVal(x,y);
		System.out.println("Power using lambda expression is "+res);
		BiFunction<Double,Double,Double> bi=(a,b) ->Math.pow(x,y);
		System.out.println("Using Bi function:"+bi.apply(x,y));
	}
}
OUTPUT:
Enter x value
5
Enter y value
2
Power using lambda expression is 25.0
Using Bi function:25.0
---------------------------------------------------------------------------------------------
interface MethodReferenceInterface
{
	MethodReferenceEx display(String a,String b);
}
class MethodReferenceEx
{
	String f,l;

	public MethodReferenceEx(String f, String l) {
		//super();
		this.f = f;
		this.l = l;
		System.out.println(f+" "+l);
	}

	public String getF() {
		return f;
	}

	public void setF(String f) {
		this.f = f;
	}

	public String getL() {
		return l;
	}

	public void setL(String l) {
		this.l = l;
	}
	
}
public class MethodReferenceDemo {	
	public static void main(String args[])
	{
		MethodReferenceInterface mri= MethodReferenceEx::new;
		mri.display("Shraddha", "Kulkarni");
	}
}
OUTPUT:
Shraddha Kulkarni